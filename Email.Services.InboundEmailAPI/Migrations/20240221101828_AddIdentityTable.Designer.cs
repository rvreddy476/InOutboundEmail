// <auto-generated />
using System;
using Email.Services.InboundEmailAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Email.Services.InboundEmailAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240221101828_AddIdentityTable")]
    partial class AddIdentityTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0-preview.3.23174.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Email.Services.InboundEmailAPI.Models.Attachments", b =>
                {
                    b.Property<int>("Attachment_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Attachment_id"));

                    b.Property<string>("Email_id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("File_data")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("File_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("File_size")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("File_type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Attachment_id");

                    b.ToTable("Attachments");
                });

            modelBuilder.Entity("Email.Services.InboundEmailAPI.Models.AutoReply", b =>
                {
                    b.Property<int>("AutoReplyID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AutoReplyID"));

                    b.Property<int>("IncomingEmailID")
                        .HasColumnType("int");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.HasKey("AutoReplyID");

                    b.ToTable("AutoReplies");
                });

            modelBuilder.Entity("Email.Services.InboundEmailAPI.Models.EmailRecipients", b =>
                {
                    b.Property<string>("RecipentId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Email_Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RecipentId");

                    b.ToTable("EmailRecipients");
                });

            modelBuilder.Entity("Email.Services.InboundEmailAPI.Models.EmailSenders", b =>
                {
                    b.Property<string>("SenderId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Email_Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SenderId");

                    b.ToTable("EmailSenders");
                });

            modelBuilder.Entity("Email.Services.InboundEmailAPI.Models.InboundEmail", b =>
                {
                    b.Property<string>("EmailId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsRead")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Recipient")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.HasKey("EmailId");

                    b.ToTable("InboundEmails");
                });
#pragma warning restore 612, 618
        }
    }
}
